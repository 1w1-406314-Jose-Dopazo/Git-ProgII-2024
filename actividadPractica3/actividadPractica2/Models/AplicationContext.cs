// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace actividadPractica3.Models;

public partial class AplicationContext : DbContext
{
    public AplicationContext(DbContextOptions<AplicationContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Articulo> Articulos { get; set; }

    public virtual DbSet<DetalleFactura> DetallesFacturas { get; set; }

    public virtual DbSet<Factura> Facturas { get; set; }

    public virtual DbSet<TipoPago> TiposPagos { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Articulo>(entity =>
        {
            entity.HasKey(e => e.IdArticulo);

            entity.Property(e => e.IdArticulo).HasColumnName("ID_Articulo");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrecioUnitario).HasColumnName("Precio_Unitario");
        });

        modelBuilder.Entity<DetalleFactura>(entity =>
        {
            entity.HasKey(e => e.IdDetalleFactura);

            entity.ToTable("Detalles_Facturas");

            entity.Property(e => e.IdDetalleFactura).HasColumnName("ID_Detalle_Factura");
            entity.Property(e => e.IdArticulo).HasColumnName("ID_Articulo");
            entity.Property(e => e.IdFactura).HasColumnName("ID_Factura");

            entity.HasOne(d => d.IdArticuloNavigation).WithMany(p => p.DetallesFacturas)
                .HasForeignKey(d => d.IdArticulo)
                .HasConstraintName("FK_Articulos");

            entity.HasOne(d => d.IdFacturaNavigation).WithMany(p => p.DetallesFacturas)
                .HasForeignKey(d => d.IdFactura)
                .HasConstraintName("FK_Facturas");
        });

        modelBuilder.Entity<Factura>(entity =>
        {
            entity.HasKey(e => e.IdFactura);
            entity.Property(e => e.IdFactura).HasColumnName("ID_Factura");
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.IdFormaPago).HasColumnName("ID_Forma_Pago");
            entity.Property(e => e.NomCliente)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Nom_Cliente");

            entity.HasOne(d => d.IdFormaPagoNavigation).WithMany(p => p.Facturas)
                .HasForeignKey(d => d.IdFormaPago)
                .HasConstraintName("FK_Tipos_Pagos");
        });

        modelBuilder.Entity<TipoPago>(entity =>
        {
            entity.HasKey(e => e.IdTipoPago);

            entity.ToTable("Tipos_Pagos");

            entity.Property(e => e.IdTipoPago).HasColumnName("ID_Tipo_Pago");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);


}